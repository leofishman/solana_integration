<?php

/**
 * @file
 * Contains solana_pay.module.
 */

/**
 * Implements hook_theme().
 */
function solana_pay_theme($existing, $type, $theme, $path) {
  return [
    'solana_pay_instructions' => [
      'variables' => [
        'payment_url' => NULL,
        'amount' => NULL,
        'payment_id' => NULL,
        'merchant_address' => NULL,
        'currency' => NULL,
      ],
      'template' => 'solana-pay-instructions',
    ],
  ];
}

/**
 * Implements hook_preprocess_commerce_checkout_completion_message().
 */
function solana_pay_preprocess_commerce_checkout_completion_message(&$variables) {
  $order = $variables['order_entity'];
  
  \Drupal::logger('solana_pay')->notice('Completion message preprocess for order @id', ['@id' => $order->id()]);
  
  if ($order->get('payment_gateway')->isEmpty()) {
    \Drupal::logger('solana_pay')->warning('Order @id has no payment gateway', ['@id' => $order->id()]);
    return;
  }

  $payment_gateway = $order->get('payment_gateway')->entity;
  if (!$payment_gateway) {
    \Drupal::logger('solana_pay')->warning('Payment gateway entity not found for order @id', ['@id' => $order->id()]);
    return;
  }

  \Drupal::logger('solana_pay')->notice('Payment gateway: @gw (plugin: @plugin)', [
    '@gw' => $payment_gateway->label(),
    '@plugin' => $payment_gateway->getPluginId(),
  ]);

  // Check for payments
  $payment_storage = \Drupal::entityTypeManager()->getStorage('commerce_payment');
  $payments = $payment_storage->loadMultipleByOrder($order);
  
  \Drupal::logger('solana_pay')->notice('Found @count payments for order @id', [
    '@count' => count($payments),
    '@id' => $order->id(),
  ]);
  
  foreach ($payments as $payment) {
    \Drupal::logger('solana_pay')->notice('Payment @pid: gateway=@gw, state=@state', [
      '@pid' => $payment->id(),
      '@gw' => $payment->getPaymentGatewayId(),
      '@state' => $payment->getState()->getId(),
    ]);
  }
}
